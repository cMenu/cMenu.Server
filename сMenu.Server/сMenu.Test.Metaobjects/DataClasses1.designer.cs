#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace cMenu.Test.Metaobjects
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_CMENU")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertT_META_SEC(T_META_SEC instance);
    partial void UpdateT_META_SEC(T_META_SEC instance);
    partial void DeleteT_META_SEC(T_META_SEC instance);
    partial void InsertT_OBJ(T_OBJ instance);
    partial void UpdateT_OBJ(T_OBJ instance);
    partial void DeleteT_OBJ(T_OBJ instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::cMenu.Test.Metaobjects.Properties.Settings.Default.DB_CMENUConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_META_SEC> T_META_SECs
		{
			get
			{
				return this.GetTable<T_META_SEC>();
			}
		}
		
		public System.Data.Linq.Table<T_OBJ> T_OBJs
		{
			get
			{
				return this.GetTable<T_OBJ>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_META_SEC")]
	public partial class T_META_SEC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _F_USER_KEY;
		
		private decimal _F_METAOBJECT_KEY;
		
		private int _F_RIGHTS;
		
		private EntityRef<T_OBJ> _T_OBJ;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_USER_KEYChanging(decimal value);
    partial void OnF_USER_KEYChanged();
    partial void OnF_METAOBJECT_KEYChanging(decimal value);
    partial void OnF_METAOBJECT_KEYChanged();
    partial void OnF_RIGHTSChanging(int value);
    partial void OnF_RIGHTSChanged();
    #endregion
		
		public T_META_SEC()
		{
			this._T_OBJ = default(EntityRef<T_OBJ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_USER_KEY", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal F_USER_KEY
		{
			get
			{
				return this._F_USER_KEY;
			}
			set
			{
				if ((this._F_USER_KEY != value))
				{
					this.OnF_USER_KEYChanging(value);
					this.SendPropertyChanging();
					this._F_USER_KEY = value;
					this.SendPropertyChanged("F_USER_KEY");
					this.OnF_USER_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_METAOBJECT_KEY", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal F_METAOBJECT_KEY
		{
			get
			{
				return this._F_METAOBJECT_KEY;
			}
			set
			{
				if ((this._F_METAOBJECT_KEY != value))
				{
					if (this._T_OBJ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnF_METAOBJECT_KEYChanging(value);
					this.SendPropertyChanging();
					this._F_METAOBJECT_KEY = value;
					this.SendPropertyChanged("F_METAOBJECT_KEY");
					this.OnF_METAOBJECT_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_RIGHTS", DbType="Int NOT NULL")]
		public int F_RIGHTS
		{
			get
			{
				return this._F_RIGHTS;
			}
			set
			{
				if ((this._F_RIGHTS != value))
				{
					this.OnF_RIGHTSChanging(value);
					this.SendPropertyChanging();
					this._F_RIGHTS = value;
					this.SendPropertyChanged("F_RIGHTS");
					this.OnF_RIGHTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OBJ_T_META_SEC", Storage="_T_OBJ", ThisKey="F_METAOBJECT_KEY", OtherKey="F_OBJ_KEY", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public T_OBJ T_OBJ
		{
			get
			{
				return this._T_OBJ.Entity;
			}
			set
			{
				T_OBJ previousValue = this._T_OBJ.Entity;
				if (((previousValue != value) 
							|| (this._T_OBJ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._T_OBJ.Entity = null;
						previousValue.T_META_SECs.Remove(this);
					}
					this._T_OBJ.Entity = value;
					if ((value != null))
					{
						value.T_META_SECs.Add(this);
						this._F_METAOBJECT_KEY = value.F_OBJ_KEY;
					}
					else
					{
						this._F_METAOBJECT_KEY = default(decimal);
					}
					this.SendPropertyChanged("T_OBJ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_OBJ")]
	public partial class T_OBJ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _F_OBJ_KEY;
		
		private string _F_OBJ_ID;
		
		private System.Nullable<decimal> _F_OBJ_PARENT;
		
		private int _F_OBJ_CLASS;
		
		private System.Nullable<int> _F_OBJ_SYSTEM;
		
		private System.Nullable<System.DateTime> _F_OBJ_MOD;
		
		private System.Nullable<int> _F_OBJ_STATUS;
		
		private EntitySet<T_META_SEC> _T_META_SECs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_OBJ_KEYChanging(decimal value);
    partial void OnF_OBJ_KEYChanged();
    partial void OnF_OBJ_IDChanging(string value);
    partial void OnF_OBJ_IDChanged();
    partial void OnF_OBJ_PARENTChanging(System.Nullable<decimal> value);
    partial void OnF_OBJ_PARENTChanged();
    partial void OnF_OBJ_CLASSChanging(int value);
    partial void OnF_OBJ_CLASSChanged();
    partial void OnF_OBJ_SYSTEMChanging(System.Nullable<int> value);
    partial void OnF_OBJ_SYSTEMChanged();
    partial void OnF_OBJ_MODChanging(System.Nullable<System.DateTime> value);
    partial void OnF_OBJ_MODChanged();
    partial void OnF_OBJ_STATUSChanging(System.Nullable<int> value);
    partial void OnF_OBJ_STATUSChanged();
    #endregion
		
		public T_OBJ()
		{
			this._T_META_SECs = new EntitySet<T_META_SEC>(new Action<T_META_SEC>(this.attach_T_META_SECs), new Action<T_META_SEC>(this.detach_T_META_SECs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_OBJ_KEY", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal F_OBJ_KEY
		{
			get
			{
				return this._F_OBJ_KEY;
			}
			set
			{
				if ((this._F_OBJ_KEY != value))
				{
					this.OnF_OBJ_KEYChanging(value);
					this.SendPropertyChanging();
					this._F_OBJ_KEY = value;
					this.SendPropertyChanged("F_OBJ_KEY");
					this.OnF_OBJ_KEYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_OBJ_ID", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string F_OBJ_ID
		{
			get
			{
				return this._F_OBJ_ID;
			}
			set
			{
				if ((this._F_OBJ_ID != value))
				{
					this.OnF_OBJ_IDChanging(value);
					this.SendPropertyChanging();
					this._F_OBJ_ID = value;
					this.SendPropertyChanged("F_OBJ_ID");
					this.OnF_OBJ_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_OBJ_PARENT", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> F_OBJ_PARENT
		{
			get
			{
				return this._F_OBJ_PARENT;
			}
			set
			{
				if ((this._F_OBJ_PARENT != value))
				{
					this.OnF_OBJ_PARENTChanging(value);
					this.SendPropertyChanging();
					this._F_OBJ_PARENT = value;
					this.SendPropertyChanged("F_OBJ_PARENT");
					this.OnF_OBJ_PARENTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_OBJ_CLASS", DbType="Int NOT NULL")]
		public int F_OBJ_CLASS
		{
			get
			{
				return this._F_OBJ_CLASS;
			}
			set
			{
				if ((this._F_OBJ_CLASS != value))
				{
					this.OnF_OBJ_CLASSChanging(value);
					this.SendPropertyChanging();
					this._F_OBJ_CLASS = value;
					this.SendPropertyChanged("F_OBJ_CLASS");
					this.OnF_OBJ_CLASSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_OBJ_SYSTEM", DbType="Int")]
		public System.Nullable<int> F_OBJ_SYSTEM
		{
			get
			{
				return this._F_OBJ_SYSTEM;
			}
			set
			{
				if ((this._F_OBJ_SYSTEM != value))
				{
					this.OnF_OBJ_SYSTEMChanging(value);
					this.SendPropertyChanging();
					this._F_OBJ_SYSTEM = value;
					this.SendPropertyChanged("F_OBJ_SYSTEM");
					this.OnF_OBJ_SYSTEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_OBJ_MOD", DbType="DateTime")]
		public System.Nullable<System.DateTime> F_OBJ_MOD
		{
			get
			{
				return this._F_OBJ_MOD;
			}
			set
			{
				if ((this._F_OBJ_MOD != value))
				{
					this.OnF_OBJ_MODChanging(value);
					this.SendPropertyChanging();
					this._F_OBJ_MOD = value;
					this.SendPropertyChanged("F_OBJ_MOD");
					this.OnF_OBJ_MODChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_OBJ_STATUS", DbType="Int")]
		public System.Nullable<int> F_OBJ_STATUS
		{
			get
			{
				return this._F_OBJ_STATUS;
			}
			set
			{
				if ((this._F_OBJ_STATUS != value))
				{
					this.OnF_OBJ_STATUSChanging(value);
					this.SendPropertyChanging();
					this._F_OBJ_STATUS = value;
					this.SendPropertyChanged("F_OBJ_STATUS");
					this.OnF_OBJ_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="T_OBJ_T_META_SEC", Storage="_T_META_SECs", ThisKey="F_OBJ_KEY", OtherKey="F_METAOBJECT_KEY")]
		public EntitySet<T_META_SEC> T_META_SECs
		{
			get
			{
				return this._T_META_SECs;
			}
			set
			{
				this._T_META_SECs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_T_META_SECs(T_META_SEC entity)
		{
			this.SendPropertyChanging();
			entity.T_OBJ = this;
		}
		
		private void detach_T_META_SECs(T_META_SEC entity)
		{
			this.SendPropertyChanging();
			entity.T_OBJ = null;
		}
	}
}
#pragma warning restore 1591
