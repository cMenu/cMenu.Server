<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII=
</value>
  </data>
</root>