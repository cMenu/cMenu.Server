<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BitFlex.Windows.Forms</name>
    </assembly>
    <members>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.IRibbonControl.Execute(BitFlex.Windows.Forms.OfficeRibbon.Interop.ExecutionVerb,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKeyRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.IUISimplePropertySet)">
            <summary>
            Handles IUICommandHandler.Execute function for this ribbon control
            </summary>
            <param name="verb">the mode of execution</param>
            <param name="key">the property that has changed</param>
            <param name="currentValue">the new value of the property that has changed</param>
            <param name="commandExecutionProperties">additional data for this execution</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.IRibbonControl.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for this ribbon control
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.IRibbonControl.CommandID">
            <summary>
            Ribbon control command id
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.BaseRibbonControl._ribbon">
            <summary>
            reference for parent ribbon class
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.BaseRibbonControl._commandID">
            <summary>
            ribbon control command id
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.BaseRibbonControl._mapProperties">
            <summary>
            map of registered properties for this ribbon control
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.BaseRibbonControl._mapEvents">
            <summary>
            map of registered events for this ribbon control
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.BaseRibbonControl.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            BaseRibbonControl ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandID">command id attached to this control</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.BaseRibbonControl.AddPropertiesProvider(BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IPropertiesProvider)">
            <summary>
            Register a properties provider with this ribbon control
            </summary>
            <param name="propertiesProvider">properties provider</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.BaseRibbonControl.AddEventsProvider(BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.IEventsProvider)">
            <summary>
            Register an events provider with this ribbon control
            </summary>
            <param name="eventsProvider">events provider</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.BaseRibbonControl.Execute(BitFlex.Windows.Forms.OfficeRibbon.Interop.ExecutionVerb,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKeyRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.IUISimplePropertySet)">
            <summary>
            Handles IUICommandHandler.Execute function for this ribbon control
            </summary>
            <param name="verb">the mode of execution</param>
            <param name="key">the property that has changed</param>
            <param name="currentValue">the new value of the property that has changed</param>
            <param name="commandExecutionProperties">additional data for this execution</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.BaseRibbonControl.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for this ribbon control
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IEnabledPropertiesProvider">
            <summary>
            Definition for enabled properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IEnabledPropertiesProvider.Enabled">
            <summary>
            Enabled property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IKeytipPropertiesProvider">
            <summary>
            Definition for keytip properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IKeytipPropertiesProvider.Keytip">
            <summary>
            Keytip property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ITooltipPropertiesProvider">
            <summary>
            Definition for tooltip properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ITooltipPropertiesProvider.TooltipTitle">
            <summary>
            Tooltip title property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ITooltipPropertiesProvider.TooltipDescription">
            <summary>
            Tooltip description property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.OnExecuteEventHandler">
            <summary>
            Signature for OnExecute event
            </summary>
            <param name="key">the property that has changed</param>
            <param name="currentValue">the new value of the property that has changed</param>
            <param name="commandExecutionProperties">additional data for this execution</param>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.IExecuteEventsProvider">
            <summary>
            Definition for Execute events provider
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.IExecuteEventsProvider.OnExecute">
            <summary>
            Execute event
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.ExecuteEventsProvider">
            <summary>
            Implementation of IExecuteEventsProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.IEventsProvider.Execute(BitFlex.Windows.Forms.OfficeRibbon.Interop.ExecutionVerb,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKeyRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.IUISimplePropertySet)">
            <summary>
            Handles IUICommandHandler.Execute function for supported events
            </summary>
            <param name="verb">the mode of execution</param>
            <param name="key">the property that has changed</param>
            <param name="currentValue">the new value of the property that has changed</param>
            <param name="commandExecutionProperties">additional data for this execution</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.IEventsProvider.SupportedEvents">
            <summary>
            Get supported "execution verbs", or events
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.BaseEventsProvider._supportedEvents">
            <summary>
            list of supported events
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.BaseEventsProvider.Execute(BitFlex.Windows.Forms.OfficeRibbon.Interop.ExecutionVerb,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKeyRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.IUISimplePropertySet)">
            <summary>
            Handles IUICommandHandler.Execute function for supported events
            </summary>
            <param name="verb">the mode of execution</param>
            <param name="key">the property that has changed</param>
            <param name="currentValue">the new value of the property that has changed</param>
            <param name="commandExecutionProperties">additional data for this execution</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.BaseEventsProvider.SupportedEvents">
            <summary>
            Get supported "execution verbs", or events
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.ExecuteEventsProvider.Execute(BitFlex.Windows.Forms.OfficeRibbon.Interop.ExecutionVerb,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKeyRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.IUISimplePropertySet)">
            <summary>
            Handles IUICommandHandler.Execute function for supported events
            </summary>
            <param name="verb">the mode of execution</param>
            <param name="key">the property that has changed</param>
            <param name="currentValue">the new value of the property that has changed</param>
            <param name="commandExecutionProperties">additional data for this execution</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="E:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.ExecuteEventsProvider.OnExecute">
            <summary>
            Execute event
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.CustomUI.UIProgressBar">
            <summary>
            Provides a highly customizable progress bar
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.CustomUI.UIProgressBar.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBar.#ctor">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.UIProgressBar class.
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.CustomUI.UIProgressBar.m_MarqueeThread">
            <devdoc>
            Thread-Safe thread that runs the marquee style operations.
            Thread that is started when the Style property is set to Marquee. 
            Is aborted when the Style is set from Marquee to any other style.
            </devdoc>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBar.OnProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            Event handler method for the ProgressChanged event
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBar.Increment">
            <summary>
            Increments the progress bar by 1
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBar.PerformStep">
            <summary>
            Increments the progress bar by the amount specified by the Step property
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.CustomUI.UIProgressBar.ProgressChanged">
            <summary>
            Triggers when the Value property is changed
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BackColor">
            <summary>
            Encapsulates and hides base.BackColor
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BackColorAngle">
            <summary>
            Gets or Sets the angle in which the gradient is drawn for the background
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BackColorOne">
            <summary>
            Gets or Sets the primary background color
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BackColorTwo">
            <summary>
            Gets or Sets the secondary background color
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BarColorAngle">
            <summary>
            Gets or Sets the angle of the bars gradient
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BarColorOne">
            <summary>
            Gets or Sets the primary color of the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BarColorTwo">
            <summary>
            Gets or Sets the secondary color of the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BarPadding">
            <summary>
            Gets or Sets the inner padding of the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BlockSpacing">
            <summary>
            Gets or Sets the distance between each block in the Blocks style
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BlockWidth">
            <summary>
            Gets or Sets the width of each block used for the Blocks style
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BorderColor">
            <summary>
            Gets or Sets the color of the border
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.BorderStyle">
            <summary>
            Gets or Sets the border style
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.EnableStatusText">
            <summary>
            Gets or Sets whether the status text will be drawn on the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.Font">
            <summary>
            Gets or Sets the base font
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.ForeColor">
            <summary>
            Gets or Sets the base foreground color
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.GlassOverlay">
            <summary>
            Gets or Sets whether the glass overlay should be drawn on the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.GlassOverlayAlpha">
            <summary>
            Gets or Sets the alpha component of the glass overlay on the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.GlassOverlaySpring">
            <summary>
            Gets or Sets whether the glass overlay springs the width of the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.MarqueeModifier">
            <summary>
            Gets or Sets the marquee speed modifier
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.MarqueeRectangle">
            <summary>
            Thread-Safe rectangle used to define the area where the marquee lies.
            This field is updated each time the marquee rectangle is invalidated.
            This allows the OnPaint method to know which portion to paint.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.MarqueeStyle">
            <summary>
            Gets or Sets the marquee style of the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.MarqueeWidth">
            <summary>
            Gets or Sets the width of the marquee
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.Maximum">
            <summary>
            Gets or Sets the maximum value of the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.Minimum">
            <summary>
            Gets or Sets the minimum value of the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.StatusText">
            <summary>
            Gets or Sets the a status description of the current progress
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.StatusAlignment">
            <summary>
            Gets or Sets the alignment of the status text
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.StatusTextColor">
            <summary>
            Gets or Sets the color of the status text
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.StatusFont">
            <summary>
            Gets or Sets the status text font
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.Step">
            <summary>
            Gets or Sets the amount the progress bar will step when the PerformStep() method is called
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.Style">
            <summary>
            Gets or Sets the style of the progress bar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.Text">
            <summary>
            Gets or Sets the base text
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.UseSystemRenderer">
            <summary>
            Gets or Sets whether the system progress bar renderer will be used.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.UseSystemVertical">
            <summary>
            Gets or Sets whether the progress bar will be drawn vertically
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBar.Value">
            <summary>
            Gets or Sets the value of the progress bar
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.CustomUI.UIProgressBar.InvokeInvalidateDelegate">
            <devdoc>
            Used to invoke the Invalidate() method during marquee operations
            </devdoc>
        </member>
        <member name="T:BitFlex.Windows.Forms.Wizard">
            <summary>
            Provides a UI for forward and backward wizard-style navigation between pages
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.#ctor">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.Wizard class
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.OnCancelled(System.Object,System.EventArgs)">
            <summary>
            EventHandler Callback for <see cref="E:BitFlex.Windows.Forms.Wizard.Cancelled"/> event
            </summary>
            <param name="sender">The sender object</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.OnFinished(System.Object,System.EventArgs)">
            <summary>
            EventHandler Callback for <see cref="E:BitFlex.Windows.Forms.Wizard.Finished"/> event
            </summary>
            <param name="sender">The sender object</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.OnPageChanged(System.Object,BitFlex.Windows.Forms.WizardPageChangedEventArgs)">
            <summary>
            EventHandler Callback for <see cref="E:BitFlex.Windows.Forms.Wizard.PageChanged"/> event
            </summary>
            <param name="sender">The sender object</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.OnPageChanging(System.Object,BitFlex.Windows.Forms.WizardPageChangingEventArgs)">
            <summary>
            EventHandler Callback for <see cref="E:BitFlex.Windows.Forms.Wizard.PageChanging"/> event
            </summary>
            <param name="sender">The sender object</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.Back">
            <summary>
            Navigates to the previous page in the wizard
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.Cancel">
            <summary>
            Cancels the wizard and raises the <see cref="E:BitFlex.Windows.Forms.Wizard.Cancelled"/> event
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.Finish">
            <summary>
            Finishes the wizard and raises the <see cref="E:BitFlex.Windows.Forms.Wizard.Finished"/> event
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.First">
            <summary>
            Navigates to the first page in the wizard
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.Last">
            <summary>
            Navigates to the last page in the wizard
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.Next">
            <summary>
            Navigates to the next page in the wizard
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.SetBackState(System.Boolean)">
            <summary>
            Sets the state of the back navigation button in the wizard
            </summary>
            <param name="enabled">Optional: true to enable, false to disable. Default value is true.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.SetCancelButtonState(System.Boolean)">
            <summary>
            Sets the state of the cancel navigation button in the wizard
            </summary>
            <param name="enabled">Optional: true to enable, false to disable. Default value is true.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.SetNextState(System.Boolean)">
            <summary>
            Sets the state of the next navigation button in the wizard
            </summary>
            <param name="enabled">Optional: true to enable, false to disable. Default value is true.</param>
        </member>
        <member name="F:BitFlex.Windows.Forms.Wizard.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.Wizard.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.Wizard.Cancelled">
            <summary>
            Triggered when the wizard is cancelled
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.Wizard.Finished">
            <summary>
            Triggered when the wizard is finished
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.Wizard.PageChanged">
            <summary>
            Triggered when a page is changed in the wizard, usually when moving back a page, or forward a page
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.Wizard.PageChanging">
            <summary>
            Triggered when the wizard is changing from one page to another
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.Wizard.Pages">
            <summary>
            Gets or sets the collection of pages in the wizard
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.Wizard.SelectedIndex">
            <summary>
            Gets or sets the selected index in the wizard
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.Wizard.SelectedPage">
            <summary>
            Gets or sets the selected page in the wizard
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.Wizard.Watermark">
            <summary>
            Gets or sets the image watermark of the wizard page
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.Design.WizardDesigner">
            <summary>
            Windows Forms Designer for <see cref="T:BitFlex.Windows.Forms.Wizard"/>
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Design.WizardDesigner.CanParent(System.Windows.Forms.Control)">
            <summary>
            Overrides base implementation of CanParent
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.Design.WizardDesigner.ActionLists">
            <summary>
            Overrides base implementation of ActionLists
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.ExplorerProgressBarState">
            <summary>
            ProgressBar States for the BitFlex.Windows.Forms.ExplorerProgressBar control
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.ExplorerProgressBarState.Error">
            <summary>
            State to be used when an error was encountered
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.ExplorerProgressBarState.Normal">
            <summary>
            State to be used for normal progress
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.ExplorerProgressBarState.Paused">
            <summary>
            State to be used when an operation is paused and no progress is being updated
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.ExplorerContextMenu">
            <summary>
            Wrapper around the <see cref="T:System.Windows.Forms.ContextMenu"/> control
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerContextMenu.#ctor">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.ExplorerContextMenu class
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerContextMenu.#ctor(System.Windows.Forms.MenuItem[])">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.ExplorerContextMenu class
            </summary>
            <param name="menuItems">The menu items owned by this context menu</param>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IGalleryPropertiesProvider">
            <summary>
            Definition for gallery properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IGalleryPropertiesProvider.Categories">
            <summary>
            Categories property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IGalleryPropertiesProvider.ItemsSource">
            <summary>
            Items source property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IGalleryPropertiesProvider.SelectedItem">
            <summary>
            Selected item property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ILabelPropertiesProvider">
            <summary>
            Definition for label properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ILabelPropertiesProvider.Label">
            <summary>
            Label property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IImagePropertiesProvider">
            <summary>
            Definition for image properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IImagePropertiesProvider.LargeImage">
            <summary>
            Large image property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IImagePropertiesProvider.SmallImage">
            <summary>
            Small image property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IImagePropertiesProvider.LargeHighContrastImage">
            <summary>
            Large high contrast image property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IImagePropertiesProvider.SmallHighContrastImage">
            <summary>
            Small high contrast image property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.IPreviewEventsProvider">
            <summary>
            Definition for Execute events provider
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.IPreviewEventsProvider.OnPreview">
            <summary>
            Preview event
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.IPreviewEventsProvider.OnCancelPreview">
            <summary>
            Cancel Preview event
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IPropertiesProvider.SupportedProperties">
            <summary>
            Get supported properties
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.BasePropertiesProvider._ribbon">
            <summary>
            reference for parent ribbon class
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.BasePropertiesProvider._commandID">
            <summary>
            ribbon control command id
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.BasePropertiesProvider._supportedProperties">
            <summary>
            list of supported properties
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.BasePropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            BasePropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandID">command id attached to this control</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.BasePropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.BasePropertiesProvider.SupportedProperties">
            <summary>
            Get supported properties
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.ExplorerLabelDivider">
            <summary>
            Represents the Windows Explorer Labeled Divider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerLabelDivider.#ctor">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.ExplorerLabelDivider class
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.ExplorerLabelDivider.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerLabelDivider.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerLabelDivider.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerLabelDivider.LineColor">
            <summary>
            Gets or sets the color of the divider line
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerLabelDivider.Text">
            <summary>
            Gets or sets the control's text and causes the control to repaint
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.ExplorerTreeView">
            <summary>
            The Windows Explorer TreeView
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerTreeView.#ctor">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.ExplorerTreeView class
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerTreeView.OnHandleCreated(System.EventArgs)">
            <summary>
            Overrides the base OnHandleCreated 
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerTreeView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides the base WndProc
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.ExplorerTreeView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerTreeView.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerTreeView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerTreeView.CreateParams">
            <summary>
            Encapsulates the information needed when creating a control
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.ExplorerTextBox">
            <summary>
            The Windows Explorer TextBox
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.ExplorerTextBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerTextBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerTextBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerTextBox.#ctor">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.ExplorerTextBox control
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerTextBox.CueText">
            <summary>
            Gets or Sets the cue text
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.WizardPageChangedEventArgs">
            <summary>
            Event Arguments for <see cref="E:BitFlex.Windows.Forms.Wizard.PageChanged"/>
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.WizardPageChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.WizardPageChangedEventArgs class
            </summary>
            <param name="oldIndex">The old index in the wizard</param>
            <param name="newIndex">The new index in the wizard</param>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPageChangedEventArgs.OldIndex">
            <summary>
            Gets the old index in the wizard 
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPageChangedEventArgs.NewIndex">
            <summary>
            Gets the new index in the wizard
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IFontControlPropertiesProvider">
            <summary>
            Definition for font control properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IFontControlPropertiesProvider.Family">
            <summary>
            Family property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IFontControlPropertiesProvider.Size">
            <summary>
            Size property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IFontControlPropertiesProvider.Bold">
            <summary>
            Bold property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IFontControlPropertiesProvider.Italic">
            <summary>
            Italic property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IFontControlPropertiesProvider.Underline">
            <summary>
            Underline property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IFontControlPropertiesProvider.Strikethrough">
            <summary>
            Strikethrough property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IFontControlPropertiesProvider.ForegroundColor">
            <summary>
            Foreground color property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IFontControlPropertiesProvider.BackgroundColor">
            <summary>
            Background color property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IFontControlPropertiesProvider.VerticalPositioning">
            <summary>
            Vertical positioning property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider">
            <summary>
            Definition for color picker properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.AutomaticColorLabel">
            <summary>
            Automatic color label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.Color">
            <summary>
            Color property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.ColorType">
            <summary>
            Color type property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.MoreColorsLabel">
            <summary>
            More colors label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.NoColorLabel">
            <summary>
            No color label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.RecentColorsCategoryLabel">
            <summary>
            Recent colors category label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.StandardColors">
            <summary>
            Standard colors property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.StandardColorsCategoryLabel">
            <summary>
            Standard colors category label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.StandardColorsTooltips">
            <summary>
            Standard colors tooltips property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.ThemeColors">
            <summary>
            Theme colors property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.ThemeColorsCategoryLabel">
            <summary>
            Theme colors category label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IColorPickerPropertiesProvider.ThemeColorsTooltips">
            <summary>
            Theme colors tooltips property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.HyperCommandLink">
            <summary>
            A flexible control that can be used for multiple commands and actions.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.#ctor">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.HyperCommandLink class.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.OnClick(System.EventArgs)">
            <summary>
            Overrides the base implementation of Control.OnClick
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.OnEnter(System.EventArgs)">
            <summary>
            Overrides the base implementation of Control.OnEnter
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Overrides the base implementation of Control.OnKeyPress
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.OnLeave(System.EventArgs)">
            <summary>
            Overrides the base implementation of Control.OnLeave
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the base implementation of Control.OnMouseDown
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.OnMouseEnter(System.EventArgs)">
            <summary>
            Overrides the base implementation of Control.OnMouseEnter
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.OnMouseLeave(System.EventArgs)">
            <summary>
            Overrides the base implementation of Control.OnMouseLeave
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the base implementation of Control.OnMouseMove
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the base implementation of Control.OnMouseUp
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides the base implementation of Control.OnPaint
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.AutoSize">
            <devdoc>
            Here we automatically size the control's height based upon the control's text, note, links and image
            </devdoc>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.NotifyUser">
            <devdoc>
            This method will be used to display the appropriate cursor as the user 'navigates'
            the control's ux
            
            1. Notify image
            2. Notify text
            3. Notify links
            </devdoc>
        </member>
        <member name="F:BitFlex.Windows.Forms.HyperCommandLink.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandLink.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.HyperCommandLink.Image">
            <summary>
            Gets or Sets the control's image
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.HyperCommandLink.Links">
            <summary>
            Gets or Sets the collection of clickable links displayed on the control
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.HyperCommandLink.Note">
            <summary>
            Gets or Sets the note used to describe a specific action
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.HyperCommandLink.Text">
            <summary>
            Gets or Sets the control's text
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.HyperCommandLink.ImageClicked">
            <summary>
            Occurs when the control's image is clicked
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.HyperCommandLink.SublinkClicked">
            <summary>
            Occurs when a sublink is clicked
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.HyperCommandLink.TextClicked">
            <summary>
            Occurs when the control's text is clicked
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.ExplorerSplitButton">
            <summary>
            Windows Explorer Split Button
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerSplitButton.#ctor">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.ExplorerSplitButton class.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerSplitButton.ShowMenu">
            <summary>
            Shows the split button's menu
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.ExplorerSplitButton.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerSplitButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerSplitButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerSplitButton.Menu">
            <summary>
            Gets or Sets the button's Drop Down Menu
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IContextAvailablePropertiesProvider">
            <summary>
            Definition for context available properties interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IContextAvailablePropertiesProvider.ContextAvailable">
            <summary>
            Context available property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ISpinnerPropertiesProvider">
            <summary>
            Definition for spinner properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ISpinnerPropertiesProvider.DecimalValue">
            <summary>
            Decimal value property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ISpinnerPropertiesProvider.Increment">
            <summary>
            Increment property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ISpinnerPropertiesProvider.MaxValue">
            <summary>
            Max value property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ISpinnerPropertiesProvider.MinValue">
            <summary>
            Min value property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ISpinnerPropertiesProvider.DecimalPlaces">
            <summary>
            Decimal places property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ISpinnerPropertiesProvider.FormatString">
            <summary>
            Format string property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IRepresentativeStringPropertiesProvider">
            <summary>
            Definition for representative string properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IRepresentativeStringPropertiesProvider.RepresentativeString">
            <summary>
            Representative string property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.ExplorerProgressBar">
            <summary>
            The Windows Explorer ProgressBar
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerProgressBar.#ctor">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.ExplorerProgressBar class
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerProgressBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides the base OnPaint method
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerProgressBar.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides the base window procedure
            </summary>
            <param name="m"></param>
        </member>
        <member name="F:BitFlex.Windows.Forms.ExplorerProgressBar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerProgressBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerProgressBar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerProgressBar.CreateParams">
            <summary>
            Encapsulates the information needed when creating a control
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerProgressBar.SmoothReverse">
            <summary>
            Gets or sets a System.Boolean value indicating whether the SmoothReverse style is used
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerProgressBar.State">
            <summary>
            Gets or Sets the state of the progress bar
            </summary>
            <remarks>
            A 500ms delay occurrs when setting this property to ensure the progress bar
            visual appearance is properly updated before another line of code is executed.
            This keeps the visual appearance in sync with other UI updates, however, you must
            call the setter of this property before any updates to keep it in sync.
            </remarks>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerProgressBar.StateDelay">
            <summary>
            Gets or sets a System.Boolean value indicating whether a 500ms delay will be emplaced when <see cref="P:BitFlex.Windows.Forms.ExplorerProgressBar.State"/> property is changed to keep the visual appearance synchronized
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerProgressBar.Vertical">
            <summary>
            Gets or sets a System.Boolean value indicating whether the progress bar will be rendered vertically
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.ExplorerButton">
            <summary>
            Windows Explorer Button
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerButton.#ctor">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.ExplorerButton class.
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.ExplorerButton.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerButton.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerButton.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerButton.Icon">
            <summary>
            Gets or Sets the button's icon
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerButton.Image">
            <summary>
            Gets or Sets the button's image
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerButton.UseShield">
            <summary>
            Gets or Sets whether the shield icon will be displayed
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.CustomUI.UIProgressBarBorderStyles">
            <summary>
            Border styles for the UIProgressBar
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.WizardPage">
            <summary>
            
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.WizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.WizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.WizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.WizardPage.#ctor">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.WizardPage class
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.WizardPage.OnNavigatingFrom(System.Object,System.EventArgs)">
            <summary>
            EventHandler Wireup for NavigatingFrom
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.WizardPage.OnNavigatedTo(System.Object,System.EventArgs)">
            <summary>
            EventHandler Wireup for NavigatedTo
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.WizardPage.NavigatingFrom">
            <summary>
            Triggered when the WizardPage is navigated from, and the next WizardPage is displayed. Used to finalize or unload data.
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.WizardPage.NavigatedTo">
            <summary>
            Triggered when the WizardPage is navigated to, and displayed. Used to prepare the page or load data.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPage.Dock">
            <summary>
            Overrides the base.Dock property and hides it from DesignTime
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPage.EnableValidation">
            <summary>
            Gets or sets a System.Boolean value indicating whether the page must be valid before the user can navigate to the next panel
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPage.Index">
            <summary>
            Gets the index in the Wizard that this page lies
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPage.IsValid">
            <summary>
            Gets or sets a System.Boolean value indicating whether the control passes developer-implemented validation
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPage.Subtitle">
            <summary>
            Gets or sets the Subtitle of the wizard page
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPage.Title">
            <summary>
            Gets or sets the Title of the wizard page
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.UICollectionChangedEvent.Attach(BitFlex.Windows.Forms.OfficeRibbon.Interop.IUICollection)">
            <summary>
            Attach to an IUICollection object events
            </summary>
            <param name="collection">IUICollection object</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.UICollectionChangedEvent.Detach">
            <summary>
            Detach from the previous IUICollection object events
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.RibbonUIApplication.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,BitFlex.Windows.Forms.OfficeRibbon.IRibbonForm)">
            <summary>
            RibbonUIApplication ctor
            </summary>
            <param name="ribbon">Ribbon</param>
            <param name="form">Form where ribbon should reside</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.RibbonUIApplication.OnViewChanged(System.UInt32,BitFlex.Windows.Forms.OfficeRibbon.Interop.ViewType,System.Object,BitFlex.Windows.Forms.OfficeRibbon.Interop.ViewVerb,System.Int32)">
            <summary>
            Called when the state of a View changes
            </summary>
            <param name="viewId">The ID for the View. Only a value of 0 is valid.</param>
            <param name="typeID">The UI_VIEWTYPE hosted by the application.</param>
            <param name="view">A pointer to the View interface.</param>
            <param name="verb">The UI_VIEWVERB (or action) performed by the View.</param>
            <param name="uReasonCode">Not defined.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.RibbonUIApplication.OnCreateUICommand(System.UInt32,BitFlex.Windows.Forms.OfficeRibbon.Interop.CommandType,BitFlex.Windows.Forms.OfficeRibbon.Interop.IUICommandHandler@)">
            <summary>
            Called for each Command specified in the Windows Ribbon (Ribbon) framework markup to bind 
            the Command to an IUICommandHandler. 
            </summary>
            <param name="commandId">The ID for the Command, which is specified in the markup resource file.</param>
            <param name="typeID">The Command type that is associated with a specific control.</param>
            <param name="commandHandler">When this method returns, contains the address of a pointer to an
            IUICommandHandler object. This object is a host application Command handler that is bound to one or 
            more Commands.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.RibbonUIApplication.OnDestroyUICommand(System.UInt32,BitFlex.Windows.Forms.OfficeRibbon.Interop.CommandType,BitFlex.Windows.Forms.OfficeRibbon.Interop.IUICommandHandler)">
            <summary>
            Called for each Command specified in the Windows Ribbon (Ribbon) framework markup when the 
            application window is destroyed. 
            </summary>
            <param name="commandId">The ID for the Command, which is specified in the markup resource file.</param>
            <param name="typeID">The Command type that is associated with a specific control.</param>
            <param name="commandHandler">A pointer to an IUICommandHandler object. This value can be NULL.</param>
            <returns>Returns S_OK if successful, or an error value otherwise.</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.RibbonUIApplication.UIRibbon">
            <summary>
            Reference to IUIRibbon object
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ILabelDescriptionPropertiesProvider">
            <summary>
            Definition for label description properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ILabelDescriptionPropertiesProvider.LabelDescription">
            <summary>
            LabelDescription property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.LabelPropertiesProvider">
            <summary>
            Implementation of ILabelPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.LabelPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            LabelPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.LabelPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.LabelPropertiesProvider.Label">
            <summary>
            Label property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.GalleryPropertiesProvider">
            <summary>
            Implementation of IGalleryPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.GalleryPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            GalleryPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.GalleryPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.GalleryPropertiesProvider.Categories">
            <summary>
            Categories property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.GalleryPropertiesProvider.ItemsSource">
            <summary>
            Items source property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.GalleryPropertiesProvider.SelectedItem">
            <summary>
            Selected item property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.EnabledPropertiesProvider">
            <summary>
            Implementation of IEnabledPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.EnabledPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            EnabledPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.EnabledPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.EnabledPropertiesProvider.Enabled">
            <summary>
            Enabled property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider">
            <summary>
            Implementation of IColorPickerPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            ColorPickerPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.AutomaticColorLabel">
            <summary>
            Automatic color label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.Color">
            <summary>
            Color property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.ColorType">
            <summary>
            Color type property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.MoreColorsLabel">
            <summary>
            More colors label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.NoColorLabel">
            <summary>
            No color label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.RecentColorsCategoryLabel">
            <summary>
            Recent colors category label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.StandardColors">
            <summary>
            Standard colors property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.StandardColorsCategoryLabel">
            <summary>
            Standard colors category label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.StandardColorsTooltips">
            <summary>
            Standard colors tooltips property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.ThemeColors">
            <summary>
            Theme colors property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.ThemeColorsCategoryLabel">
            <summary>
            Theme colors category label property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ColorPickerPropertiesProvider.ThemeColorsTooltips">
            <summary>
            Theme colors tooltips property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.ExplorerMainMenu">
            <summary>
            Wrapper around <see cref="T:System.Windows.Forms.MainMenu"/> class
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerMainMenu.#ctor">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.ExplorerMainMenu class
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerMainMenu.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.ExplorerMainMenu class
            </summary>
            <param name="container">The host container</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerMainMenu.#ctor(System.Windows.Forms.MenuItem[])">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.ExplorerMainMenu class
            </summary>
            <param name="items">The items owned by this MainMenu</param>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.IRibbonForm">
            <summary>
            IRibbonForm interface should be implemented by the main form who want the ribbon
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.IRibbonForm.RibbonHeightUpdated(System.Int32)">
            <summary>
            Called when the ribbon height is changed, 
            allowing the form to reposition its controls so the ribbon doesn't hide them.
            </summary>
            <param name="newHeight">new height</param>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.IRibbonForm.WindowHandle">
            <summary>
            Getter for the main form window handle
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.VistaForm">
            <summary>
            Creates the standard Windows Form but using the proper Windows Vista+7 style colors
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.VistaForm.#ctor">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.VistaForm class
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.VistaForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.VistaForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.VistaForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.Design.WizardPageActionList">
            <summary>
            DesignerActionList for <see cref="T:BitFlex.Windows.Forms.Design.WizardPageDesigner"/>
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Design.WizardPageActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.Design.WizardPageActionList class
            </summary>
            <param name="component">The base component</param>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant">
            <summary>
            Represents the OLE struct PROPVARIANT.
            </summary>
            <remarks>
            Must call Clear when finished to avoid memory leaks. If you get the value of
            a VT_UNKNOWN prop, an implicit AddRef is called, thus your reference will
            be active even after the PropVariant struct is cleared.
            Correct usage:
            
                PropVariant propVar;
                GetProp(out propVar);
                try
                {
                    object value = propVar.Value;
                }
                finally { propVar.Clear(); }
                
            Originally sourced from http://blogs.msdn.com/adamroot/pages/interop-with-propvariants-in-net.aspx
            and modified to support R/W, and SafeArray vectors, decimal values, and other fixes.
            </remarks>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.FromObject(System.Object)">
            <summary>
            Creates a PropVariant from an object
            </summary>
            <param name="value">The object containing the data.</param>
            <returns>An initialized PropVariant</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.Clear">
            <summary>
            Called to clear the PropVariant's referenced and local memory.
            </summary>
            <remarks>
            You must call Clear to avoid memory leaks.
            </remarks>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetUInt(System.UInt32)">
            <summary>
            Set an unsigned int value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetBool(System.Boolean)">
            <summary>
            Set a bool value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetDateTime(System.DateTime)">
            <summary>
            Set a DateTime value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetString(System.String)">
            <summary>
            Set a string value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetIUnknown(System.Object)">
            <summary>
            Set an IUnknown value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetSafeArray(System.Array)">
            <summary>
            Set a safe array value
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetByte(System.Byte)">
            <summary>
            Set a byte value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetSByte(System.SByte)">
            <summary>
            Set a sbyte value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetShort(System.Int16)">
            <summary>
            Set a short value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetUShort(System.UInt16)">
            <summary>
            Set an unsigned short value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetInt(System.Int32)">
            <summary>
            Set an int value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetUIntVector(System.UInt32[])">
            <summary>
            Set an uint vector
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetStringVector(System.String[])">
            <summary>
            Set a string vector
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetBoolVector(System.Boolean[])">
            <summary>
            Set a bool vector
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetShortVector(System.Int16[])">
            <summary>
            Set a short vector
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetUShortVector(System.UInt16[])">
            <summary>
            Set a short vector
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetIntVector(System.Int32[])">
            <summary>
            Set an int vector
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetLongVector(System.Int64[])">
            <summary>
            Set a long vector
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetULongVector(System.UInt64[])">
            <summary>
            Set a ulong vector
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetDoubleVector(System.Double[])">
            <summary>
            Set a double vector
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetDateTimeVector(System.DateTime[])">
            <summary>
            Set a DateTime vector
            </summary>
            <param name="array">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetDecimal(System.Decimal)">
            <summary>
            Set a decimal  value
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetLong(System.Int64)">
            <summary>
            Set a long
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetULong(System.UInt64)">
            <summary>
            Set a ulong
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.SetDouble(System.Double)">
            <summary>
            Set a double
            </summary>
            <param name="value">The new value to set.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.GetDataBytes">
            <summary>
            Gets a byte array containing the data bits of the struct.
            </summary>
            <returns>A byte array that is the combined size of the data bits.</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant.CrackSingleDimSafeArray(System.IntPtr)">
            <summary>
            Marshals an unmanaged SafeArray to a managed Array object.
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IBooleanValuePropertyProvider">
            <summary>
            Definition for boolean value properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IBooleanValuePropertyProvider.BooleanValue">
            <summary>
            Boolean value property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IRecentItemsPropertiesProvider">
            <summary>
            Definition for recent items properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IRecentItemsPropertiesProvider.RecentItems">
            <summary>
            Recent items property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.RecentItemsPropertiesProvider">
            <summary>
            Implementation of IRecentItemsPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.RecentItemsPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            RecentItemsPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.RecentItemsPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.RecentItemsPropertiesProvider.RecentItems">
            <summary>
            Recent items property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ImagePropertiesProvider">
            <summary>
            Implementation of IImagePropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ImagePropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            ImagePropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ImagePropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ImagePropertiesProvider.LargeImage">
            <summary>
            Large image property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ImagePropertiesProvider.SmallImage">
            <summary>
            Small image property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ImagePropertiesProvider.LargeHighContrastImage">
            <summary>
            Large high contrast image property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ImagePropertiesProvider.SmallHighContrastImage">
            <summary>
            Small high contrast image property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.Design.WizardPageDesigner">
            <summary>
            Windows Forms Designer for <see cref="T:BitFlex.Windows.Forms.WizardPage"/>
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.Design.WizardPageDesigner.ActionLists">
            <summary>
            Overrides base implementation of ActionLists
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IStringValuePropertiesProvider">
            <summary>
            Definition for string value properties provider interface
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.IStringValuePropertiesProvider.StringValue">
            <summary>
            String value property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.StringValuePropertiesProvider">
            <summary>
            Implementation of IStringValuePropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.StringValuePropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            StringValuePropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.StringValuePropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.StringValuePropertiesProvider.StringValue">
            <summary>
            String value property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.CustomUI.UIProgressBarStyles">
            <summary>
            Progress styles for the progress bar
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.Design.WizardPageCollectionEditor">
            <summary>
            Editor for <see cref="!:BitFlex.Windows.Forms.WizardPageCollection"/>
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Design.WizardPageCollectionEditor.#ctor">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.Design.WizardPageCollectionEditor class
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.LabelDescriptionPropertiesProvider">
            <summary>
            Implementation of ILabelDescriptionPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.LabelDescriptionPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            LabelDescriptionPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.LabelDescriptionPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.LabelDescriptionPropertiesProvider.LabelDescription">
            <summary>
            Label description property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.ExplorerListView">
            <summary>
            The Windows Explorer ListView
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerListView.#ctor">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.ListViewEx class
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerListView.OnEnter(System.EventArgs)">
            <summary>
            Overrides the base OnEnter method
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.ExplorerListView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerListView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.ExplorerListView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.ExplorerListView.IsExplorerStyle">
            <summary>
            Gets a value indicating whether the Windows Explorer styles are applied to the control
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.CommandLink">
            <summary>
            The Windows Vista CommandLink
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.CommandLink.#ctor">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.CommandLink class
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.CommandLink.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.CommandLink.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.CommandLink.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CommandLink.CreateParams">
            <summary>
            Encapsulates the information needed when creating a control
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CommandLink.Image">
            <summary>
            Gets or Sets the display image
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CommandLink.Note">
            <summary>
            Gets or Sets the CommandLink's note
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CommandLink.UseShield">
            <summary>
            Gets or Sets a value indicating whether the Shield Icon is displayed
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Ribbon">
            <summary>
            Main class for using the windows ribbon in a .NET application
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.InitFramework(BitFlex.Windows.Forms.OfficeRibbon.IRibbonForm)">
            <summary>
            Initalize ribbon framework
            </summary>
            <param name="form">Form where ribbon should reside</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.InitFramework(BitFlex.Windows.Forms.OfficeRibbon.IRibbonForm,System.String,System.Reflection.Module)">
            <summary>
            Initalize ribbon framework
            </summary>
            <param name="form">Form where ribbon should reside</param>
            <param name="resourceName">Identifier of the ribbon resource</param>
            <param name="resourceModule">Module where to find ribbon resource</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.InitFramework(BitFlex.Windows.Forms.OfficeRibbon.IRibbonForm,System.String,System.String)">
            <summary>
            Initalize ribbon framework
            </summary>
            <param name="form">Form where ribbon should reside</param>
            <param name="resourceName">Identifier of the ribbon resource</param>
            <param name="ribbonDllName">Dll name where to find ribbon resource</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.InitFramework(BitFlex.Windows.Forms.OfficeRibbon.IRibbonForm,System.String,System.IntPtr)">
            <summary>
            Initalize ribbon framework
            </summary>
            <param name="form">Form where ribbon should reside</param>
            <param name="resourceName">Identifier of the ribbon resource</param>
            <param name="hInstance">Pointer to HINSTANCE of module where we can find ribbon resource</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.DestroyFramework">
            <summary>
            Destroy ribbon framework
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.SetColors(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Change ribbon background, highlight and text colors
            </summary>
            <param name="background">new background color</param>
            <param name="highlight">new highlight color</param>
            <param name="text">new text color</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.ConvertToUIImage(System.Drawing.Bitmap)">
            <summary>
            Wraps a bitmap object with IUIImage interface
            </summary>
            <param name="bitmap">bitmap object to wrap</param>
            <returns>IUIImage wrapper</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.SetModes(System.Byte[])">
            <summary>
            Set current application modes
            </summary>
            <param name="modesArray">array of modes to set</param>
            <remarks>Unlisted modes will be unset</remarks>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.ShowContextPopup(System.UInt32,System.Int32,System.Int32)">
            <summary>
            Shows a predefined context popup in a specific location
            </summary>
            <param name="contextPopupID">commandId for the context popup</param>
            <param name="x">X in screen coordinates</param>
            <param name="y">Y in screen coordinates</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.CreateRibbonFramework">
            <summary>
            Create ribbon framework object
            </summary>
            <returns>ribbon framework object</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.CreateImageFromBitmapFactory">
            <summary>
            Create image-from-bitmap factory object
            </summary>
            <returns>image-from-bitmap factory object</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.GenerateDefaultRibbonDllName">
            <summary>
            Generates a default ribbon dll name
            </summary>
            <returns>name of the dll</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.AddRibbonControl(BitFlex.Windows.Forms.OfficeRibbon.IRibbonControl)">
            <summary>
            Adds a ribbon control to the internal map
            </summary>
            <param name="ribbonControl">ribbon control to add</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.Execute(System.UInt32,BitFlex.Windows.Forms.OfficeRibbon.Interop.ExecutionVerb,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKeyRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.IUISimplePropertySet)">
            <summary>
            Implementation of IUICommandHandler.Execute
            Responds to execute events on Commands bound to the Command handler
            </summary>
            <param name="commandID">the command that has been executed</param>
            <param name="verb">the mode of execution</param>
            <param name="key">the property that has changed</param>
            <param name="currentValue">the new value of the property that has changed</param>
            <param name="commandExecutionProperties">additional data for this execution</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
            <remarks>This method is used internally by the Ribbon class and should not be called by the user.</remarks>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.UpdateProperty(System.UInt32,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Implementation of IUICommandHandler.UpdateProperty
            Responds to property update requests from the Windows Ribbon (Ribbon) framework. 
            </summary>
            <param name="commandID">The ID for the Command, which is specified in the Markup resource file</param>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
            <remarks>This method is used internally by the Ribbon class and should not be called by the user.</remarks>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.Initalized">
            <summary>
            Check if ribbon framework has been initialized
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.Framework">
            <summary>
            Get ribbon framework object
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.Minimized">
            <summary>
            Specifies whether the ribbon is in a collapsed or expanded state
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.Viewable">
            <summary>
            Specifies whether the ribbon user interface (UI) is in a visible or hidden state
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Ribbon.QuickAccessToolbarDock">
            <summary>
            Specifies whether the quick access toolbar is docked at the top or at the bottom
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Interop.HRESULT">
            <summary>
            HRESULT Wrapper
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.BooleanValuePropertyProvider">
            <summary>
            Implementation of IBooleanValuePropertyProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.BooleanValuePropertyProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            BooleanValuePropertyProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.BooleanValuePropertyProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.BooleanValuePropertyProvider.BooleanValue">
            <summary>
            Boolean value property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.HyperCommandSubLinkClickedEventArgs">
            <summary>
            EventArgs used to store information about a HyperCommandSublink when it is clicked.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandSubLinkClickedEventArgs.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.HyperCommandSublinkClickedEventArgs class.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.HyperCommandSubLinkClickedEventArgs.Command">
            <summary>
            Gets the command that was triggered
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.CustomUI.UIProgressBarMarqueeStyles">
            <summary>
            Marquee styles for the progress bar
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.WizardPageChangingEventArgs">
            <summary>
            Event Arguments for <see cref="E:BitFlex.Windows.Forms.Wizard.PageChanging"/>
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.WizardPageChangingEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.WizardPageChangedEventArgs class
            </summary>
            <param name="oldIndex">The old index in the wizard</param>
            <param name="newIndex">The new index in the wizard</param>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPageChangingEventArgs.Cancel">
            <summary>
            Gets or sets a System.Boolean value indicating whether changing pages should be cancelled
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPageChangingEventArgs.OldIndex">
            <summary>
            Gets the old index in the wizard 
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.WizardPageChangingEventArgs.NewIndex">
            <summary>
            Gets the new index in the wizard
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.Design.WizardActionList">
            <summary>
            DesignerActionList for <see cref="T:BitFlex.Windows.Forms.Design.WizardDesigner"/>
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.Design.WizardActionList.#ctor(System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the BitFlex.Windows.Forms.Design.WizardActionList class
            </summary>
            <param name="component">Base Component</param>
        </member>
        <member name="P:BitFlex.Windows.Forms.Design.WizardActionList.SelectedPage">
            <summary>
            Gets or sets the SelectedPage of the wizard being designed
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.AppBar">
            <summary>
            An application desktop toolbar (also called an appbar) is a window that is similar to the Windows taskbar. It is anchored to an edge of the screen, and it typically contains buttons that give the user quick access to other applications and windows. The system prevents other applications from using the desktop area occupied by an appbar. Any number of appbars can exist on the desktop at any given time.
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.AppBar.AppBarMessage">
            <devdoc>
            Custom Windows Message
            Used to register our AppBar Windows Message and create a callback identifier
            </devdoc>
        </member>
        <member name="F:BitFlex.Windows.Forms.AppBar.uCallbackMessage">
            <devdoc>
            This message is registered as "AppBarMessage" and the field stores the identifier registered in Windows
            </devdoc>
        </member>
        <member name="F:BitFlex.Windows.Forms.AppBar.initialized">
            <summary>
            This is a quick field initializer
            Mainly used so when the AppBar is run for the first time, the size and position is updated correctly based on
            how the designer has specified the height and width and design-time
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.AppBar.Register">
            <summary>
            Registers the AppBar
            </summary>
            <returns>Returns true if the AppBar was successfully registered, otherwise returns false</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.AppBar.Unregister">
            <summary>
            Unregisters the AppBar
            </summary>
            <returns>Returns true if the AppBar was successfully unregistered, otherwise returns false</returns>
        </member>
        <member name="M:BitFlex.Windows.Forms.AppBar.QueryAndPositionAppBar">
            <devdoc>
            Queries Positions the AppBar into position on the Screen
            </devdoc>
        </member>
        <member name="M:BitFlex.Windows.Forms.AppBar.OnLoad(System.EventArgs)">
            <summary>
            Registers the AppBar when the form is loaded
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.AppBar.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Unregisters the AppBar as the form is closed
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.AppBar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.AppBar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.AppBar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.AppBar.AutoHide">
            <summary>
            Gets or sets a System.Boolean value indicating whether the AppBar is an AutoHide AppBar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.AppBar.CreateParams">
            <summary>
            New implementation for base.CreateParams
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.AppBar.Dock">
            <summary>
            Hides base implementation of Control.Dock
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.AppBar.Edge">
            <summary>
            Gets or sets a <see cref="T:BitFlex.Win32.Constants.ABEdge"/> enumeration value that specifies which edge of the screen the AppBar will attach to
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.AppBar.Registered">
            <summary>
            Gets a System.Boolean value indicating whether the AppBar is registered
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.OnPreviewEventHandler">
            <summary>
            Signature for OnPreview event
            </summary>
            <param name="key">the property that has changed</param>
            <param name="currentValue">the new value of the property that has changed</param>
            <param name="commandExecutionProperties">additional data for this execution</param>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.OnCancelPreviewEventHandler">
            <summary>
            Signature for OnCancelPreview event
            </summary>
            <param name="key">the property that has changed</param>
            <param name="currentValue">the new value of the property that has changed</param>
            <param name="commandExecutionProperties">additional data for this execution</param>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.PreviewEventsProvider">
            <summary>
            Implementation of IPreviewEventsProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.PreviewEventsProvider.Execute(BitFlex.Windows.Forms.OfficeRibbon.Interop.ExecutionVerb,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKeyRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.IUISimplePropertySet)">
            <summary>
            Handles IUICommandHandler.Execute function for supported events
            </summary>
            <param name="verb">the mode of execution</param>
            <param name="key">the property that has changed</param>
            <param name="currentValue">the new value of the property that has changed</param>
            <param name="commandExecutionProperties">additional data for this execution</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="E:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.PreviewEventsProvider.OnPreview">
            <summary>
            Preview event
            </summary>
        </member>
        <member name="E:BitFlex.Windows.Forms.OfficeRibbon.Controls.Events.PreviewEventsProvider.OnCancelPreview">
            <summary>
            Cancel Preview event
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.WizardPageCollection`1">
            <summary>
            Collection used primarily for storing <see cref="T:BitFlex.Windows.Forms.WizardPage"/> controls, but is extensible and supports designer interaction
            </summary>
            <typeparam name="TWizardPage">The type of <see cref="T:BitFlex.Windows.Forms.WizardPage"/> items in the collection</typeparam>
        </member>
        <member name="F:BitFlex.Windows.Forms.WizardPageCollection`1.OwnerWizard">
            <devdoc>
            Internal Field,
            Used to store what <see cref="T:BitFlex.Windows.Forms.Wizard"/> control owns this collection of pages. This
            field is used to notify the wizard of changes to the list so the changes are reflected
            in the designer, and at run-time.
            
            Example:
            WizardPageList.Add(new WizardPage()),
            This will notify the parent wizard to display the newly added page and add it to it's
            control collection
            </devdoc>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BitFlex.Windows.Forms.WizardPageCollection`1.Add(`0)" -->
        <!-- Badly formed XML comment ignored for member "M:BitFlex.Windows.Forms.WizardPageCollection`1.Insert(System.Int32,`0)" -->
        <!-- Badly formed XML comment ignored for member "M:BitFlex.Windows.Forms.WizardPageCollection`1.Remove(`0)" -->
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.TooltipPropertiesProvider">
            <summary>
            Implementation of ITooltipPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.TooltipPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            TooltipPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.TooltipPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.TooltipPropertiesProvider.TooltipTitle">
            <summary>
            Tooltip title property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.TooltipPropertiesProvider.TooltipDescription">
            <summary>
            Tooltip description property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.RepresentativeStringPropertiesProvider">
            <summary>
            Implementation of IRepresentativeStringPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.RepresentativeStringPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            RepresentativeStringPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.RepresentativeStringPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.RepresentativeStringPropertiesProvider.RepresentativeString">
            <summary>
            Representative string property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.HyperCommandSubLink">
            <summary>
            Represents a link that is used in conjunction with the HyperCommandLink control.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandSubLink.#ctor">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.HyperCommandSublink class.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandSubLink.#ctor(System.String)">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.HyperCommandSublink class.
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.HyperCommandSubLink.#ctor(System.String,System.String)">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.HyperCommandSublink class.
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.HyperCommandSubLink.Command">
            <summary>
            Gets or Sets the command ID that is used to determine which HyperCommandSublink was clicked on the parent control
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.HyperCommandSubLink.Image">
            <summary>
            Gets or Sets the control's image
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.HyperCommandSubLink.Text">
            <summary>
            Gets or Sets the control's text
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.SpinnerPropertiesProvider">
            <summary>
            Implementation of ISpinnerPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.SpinnerPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            SpinnerPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.SpinnerPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.SpinnerPropertiesProvider.DecimalValue">
            <summary>
            Decimal value property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.SpinnerPropertiesProvider.Increment">
            <summary>
            Increment property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.SpinnerPropertiesProvider.MaxValue">
            <summary>
            Max value property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.SpinnerPropertiesProvider.MinValue">
            <summary>
            Min value property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.SpinnerPropertiesProvider.DecimalPlaces">
            <summary>
            Decimal places property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.SpinnerPropertiesProvider.FormatString">
            <summary>
            Format string property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.KeytipPropertiesProvider">
            <summary>
            Implementation of IKeytipPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.KeytipPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            KeytipPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.KeytipPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.KeytipPropertiesProvider.Keytip">
            <summary>
            Keytip property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ContextAvailablePropertiesProvider">
            <summary>
            Implementation of IContextAvailablePropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ContextAvailablePropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            ContextAvailablePropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ContextAvailablePropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.ContextAvailablePropertiesProvider.ContextAvailable">
            <summary>
            Context available property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.CustomUI.UIProgressBarRenderer">
            <summary>
            Helper class used to render the visual elements of a UIProgressBar
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBarRenderer.#ctor(BitFlex.Windows.Forms.CustomUI.UIProgressBar,System.Drawing.Graphics)">
            <summary>
            Instantiates a new instance of the BitFlex.Windows.Forms.UIProgressBarRenderer class.
            </summary>
            <param name="control"></param>
            <param name="graphics"></param>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBarRenderer.DrawBackground">
            <summary>
            Draws the standard UIProgressBar background
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBarRenderer.DrawBorder">
            <summary>
            Draws a standard squared border on a UIProgressBar
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBarRenderer.DrawRoundedBorder(System.Drawing.Color)">
            <summary>
            Draws a rounded border on a UIProgressBar
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.CustomUI.UIProgressBarRenderer.DrawSquaredBorder(System.Drawing.Color)">
            <summary>
            Draws the squared border on a UIProgressBar
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBarRenderer.BorderTension">
            <summary>
            The tension to use when drawing a rounded border
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBarRenderer.Control">
            <summary>
            The default control to draw to
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.CustomUI.UIProgressBarRenderer.Graphics">
            <summary>
            The default graphics object to use
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Interop.RibbonProperties.GetPropertyKeyName(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@)">
            <summary>
            Get the name of a given PropertyKey
            </summary>
            <param name="propertyKey">PropertyKey</param>
            <returns>Name of the PropertyKey</returns>
            <remarks>This function is used for debugging.</remarks>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.RibbonQuickAccessToolbar._ribbon">
            <summary>
            reference for parent ribbon class
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.RibbonQuickAccessToolbar._commandID">
            <summary>
            QAT command id
            </summary>
        </member>
        <member name="F:BitFlex.Windows.Forms.OfficeRibbon.Controls.RibbonQuickAccessToolbar._customizeButton">
            <summary>
            handler for the customize button
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.RibbonQuickAccessToolbar.ItemsSource">
            <summary>
            Items source property
            </summary>
        </member>
        <member name="T:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider">
            <summary>
            Implementation of IFontControlPropertiesProvider
            </summary>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.#ctor(BitFlex.Windows.Forms.OfficeRibbon.Ribbon,System.UInt32)">
            <summary>
            FontControlPropertiesProvider ctor
            </summary>
            <param name="ribbon">parent ribbon</param>
            <param name="commandId">ribbon control command id</param>
        </member>
        <member name="M:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.UpdateProperty(BitFlex.Windows.Forms.OfficeRibbon.Interop.PropertyKey@,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariantRef,BitFlex.Windows.Forms.OfficeRibbon.Interop.PropVariant@)">
            <summary>
            Handles IUICommandHandler.UpdateProperty function for the supported properties
            </summary>
            <param name="key">The Property Key to update</param>
            <param name="currentValue">A pointer to the current value for key. This parameter can be NULL</param>
            <param name="newValue">When this method returns, contains a pointer to the new value for key</param>
            <returns>Returns S_OK if successful, or an error value otherwise</returns>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.FontProperties">
            <summary>
            Font properties property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.Family">
            <summary>
            Family property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.Size">
            <summary>
            Size property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.Bold">
            <summary>
            Bold property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.Italic">
            <summary>
            Italic property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.Underline">
            <summary>
            Underline property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.Strikethrough">
            <summary>
            Strikethrough property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.ForegroundColor">
            <summary>
            Foreground color property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.BackgroundColor">
            <summary>
            Background color property
            </summary>
        </member>
        <member name="P:BitFlex.Windows.Forms.OfficeRibbon.Controls.Properties.FontControlPropertiesProvider.VerticalPositioning">
            <summary>
            Vertical positioning property
            </summary>
        </member>
    </members>
</doc>
